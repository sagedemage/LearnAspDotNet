@model IEnumerable<LearnAspDotNet.Models.Weather>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <button asp-action="Create" onclick="createWeather()">Create New</button>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Message)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Message)
            </td>
            <td>
                <button asp-action="Edit" asp-route-id="@item.id">Edit</button>
                <button asp-action="Details" asp-route-id="@item.id">Details</button>
                <button asp-action="Delete" onclick="deleteWeather(@item.id)" asp-route-id="@item.id">Delete</button>
            </td>
        </tr>
}
    </tbody>
</table>

<script>
    async function deleteWeather(id) {
        // http://localhost:5019/Weathers/Delete?id=1002
        const delete_weather = confirm("Do you want to delete the weather entry?")
        if (delete_weather) {
            const response = await fetch("/Weathers/Delete?id=" + id, {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json",
                }
            })
            window.location.reload()
        }
    }

    async function createWeather() {
        const data = {"Status": "Cold", "Message": "It is cold outside"}
        const response = await fetch("Weathers/Create", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(data)
        })
        window.location.reload()
    }
</script>
