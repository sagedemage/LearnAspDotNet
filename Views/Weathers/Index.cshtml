@model IEnumerable<LearnAspDotNet.Models.Weather>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <button asp-action="Create" onclick="createWeather()">Create New</button>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Message)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Message)
            </td>
            <td>
                <button asp-action="Edit" onclick="updateWeather(@item.id)" asp-route-id="@item.id">Edit</button>
                <button asp-action="Delete" onclick="deleteWeather(@item.id)" asp-route-id="@item.id">Delete</button>
            </td>
        </tr>
}
    </tbody>
</table>

<script>
    async function deleteWeather(id) {
        const delete_weather = confirm("Do you want to delete the weather entry?")
        if (delete_weather) {
            const response = await fetch("/Weathers/Delete?id=" + id, {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json",
                }
            })
            window.location.reload()
        }
    }

    async function createWeather() {
        let status = prompt("What is the status of the Weather?")
        let message = prompt("Provide the message of the Weather.")
        if (status !== null && message !== null) {
            const data = { "Status": status, "Message": message }
            const response = await fetch("Weathers/Create", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(data)
            })
            window.location.reload()
        }
    }

    async function fetchWeather(id) {
        const response = await fetch("Weathers/Fetch?id=" + id, {
            method: "GET",
            headers: {
                "Content-Type": "application/json"
            },
        })

        return response.json()
    }

    async function updateWeather(id) {
        console.log(id)
        const weather = await fetchWeather(id)
        let status = prompt("What is the status of the Weather?", weather.status)
        let message = prompt("Provide the message of the Weather.", weather.message)
        if (status !== null && message !== null) {
            const data = { "Id": id, "Status": status, "Message": message }
            const response = await fetch("Weathers/Update", {
                method: "PATCH",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(data)
            })
            window.location.reload()
        }
    }
</script>
